{"version":3,"sources":["loader.gif","components/Loader/Loader.js","constants/actionTypes.js","constants/common.js","actions/booksActions.js","components/Book/Book.js","containers/BooksList/BooksList.js","actions/authorsActions.js","containers/AuthorsList/AuthorsList.js","containers/BookPage/BookPage.js","containers/AuthorPage/AuthorPage.js","containers/NotFoundPage/NotFoundPage.js","components/Header/Header.js","containers/App/App.js","serviceWorker.js","reducers/booksReducer.js","reducers/authorsReducer.js","reducers/index.js","index.js","store/configureStore.js"],"names":["module","exports","Loader","className","src","title","alt","TYPES","FETCH_BOOKS_LIST_START","FETCH_BOOKS_LIST_SUCCESS","FETCH_BOOKS_LIST_ERROR","SET_FAVORITES_LIST","SET_CURRENT_OPENED_BOOK","FETCH_AUTHOR_LIST_START","FETCH_AUTHOR_LIST_SUCCESS","FETCH_AUTHOR_LIST_ERROR","SET_CURRENT_OPENED_AUTHOR","EXPAND_AUTHOR_MENU","CLOSE_AUTHOR_MENU","ROOT","loadBooksList","dispatch","type","fetch","then","response","json","success","favorites","JSON","parse","localStorage","getItem","payload","items","data","error","catch","console","warn","handleFavoritesList","id","getState","books","includes","filter","item","setItem","stringify","loadBookById","book","find","parseInt","connect","bindActionCreators","props","Card","Typography","variant","to","authors","map","author","index","key","length","IconButton","aria-label","onClick","inFavorites","Star","StarBorder","BooksList","this","loading","match","params","genre","Paper","React","PureComponent","state","loadAuthorsList","fetchAuthorList","reduce","acc","name","forEach","push","loadAuthorByName","expandAuthorMenu","e","target","currentTarget","closeAuthorMenu","AuthorsList","log","Object","keys","Button","Menu","anchorEl","opened","keepMounted","open","Boolean","onClose","MenuItem","disableGutters","BookPage","current","description","color","AuthorPage","bio","NotFoundPage","Home","Header","activeClassName","isActive","location","pathname","exact","App","path","component","window","hostname","initialState","combineReducers","action","store","createStore","rootReducer","applyMiddleware","thunk","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.1878a6be.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/loader.0b7095f5.gif\";","import React from 'react';\r\nimport src from '../../loader.gif';\r\n\r\nimport './Loader.css';\r\n\r\nconst Loader = () => (\r\n  <div className=\"loader\">\r\n    <img className=\"image\" src={src} title=\"Loading\" alt=\"Loading\"/>\r\n  </div>\r\n);\r\n\r\nexport default Loader;\r\n","export const TYPES = {\r\n  FETCH_BOOKS_LIST_START: \"FETCH_BOOKS_LIST_START\",\r\n  FETCH_BOOKS_LIST_SUCCESS: \"FETCH_BOOKS_LIST_SUCCESS\",\r\n  FETCH_BOOKS_LIST_ERROR: \"FETCH_BOOKS_LIST_ERROR\",\r\n  SET_FAVORITES_LIST: \"SET_FAVORITES_LIST\",\r\n  SET_CURRENT_OPENED_BOOK: \"SET_CURRENT_OPENED_BOOK\",\r\n\r\n  FETCH_AUTHOR_LIST_START: \"FETCH_AUTHOR_LIST_START\",\r\n  FETCH_AUTHOR_LIST_SUCCESS: \"FETCH_AUTHOR_LIST_SUCCESS\",\r\n  FETCH_AUTHOR_LIST_ERROR: \"FETCH_AUTHOR_LIST_ERROR\",\r\n  SET_CURRENT_OPENED_AUTHOR: \"SET_CURRENT_OPENED_AUTHOR\",\r\n  EXPAND_AUTHOR_MENU: \"EXPAND_AUTHOR_MENU\",\r\n  CLOSE_AUTHOR_MENU: \"CLOSE_AUTHOR_MENU\",\r\n};","export const ROOT = process.env.NODE_ENV === 'production' ? 'https://kreo-book-app-api.herokuapp.com' : 'http://localhost:8080';\r\n","import { TYPES } from '../constants/actionTypes';\r\nimport { ROOT } from '../constants/common';\r\n\r\nexport function loadBooksList() {\r\n  return (dispatch) => {\r\n    dispatch({\r\n      type: TYPES.FETCH_BOOKS_LIST_START\r\n    });\r\n    return fetch(`${ROOT}/api/books-list`)\r\n      .then(response => response.json())\r\n      .then(response => {\r\n      if(response.success) {\r\n        const favorites = JSON.parse(localStorage.getItem('saved-favorites') || '[]');\r\n        dispatch({\r\n          type: TYPES.FETCH_BOOKS_LIST_SUCCESS,\r\n          payload: {\r\n            items: response.data,\r\n            favorites\r\n          }\r\n        });\r\n        return response.data;\r\n      } else {\r\n        throw response.error\r\n      }\r\n    }).catch(error => {\r\n      console.warn(error);\r\n      dispatch({\r\n        type: TYPES.FETCH_BOOKS_LIST_ERROR\r\n      });\r\n    });\r\n  }\r\n}\r\n\r\nexport function handleFavoritesList(id) {\r\n  return (dispatch, getState) => {\r\n    localStorage.getItem('saved-favorites');\r\n    let { favorites } = getState().books;\r\n    if(favorites.includes(id)) {\r\n      favorites = favorites.filter(item => item !== id);\r\n      dispatch({\r\n        type: TYPES.SET_FAVORITES_LIST,\r\n        payload: favorites\r\n      });\r\n    } else {\r\n      favorites = [...favorites, id];\r\n      dispatch({\r\n        type: TYPES.SET_FAVORITES_LIST,\r\n        payload: favorites\r\n      });\r\n    }\r\n    localStorage.setItem('saved-favorites', JSON.stringify(favorites));\r\n  }\r\n}\r\n\r\nexport function loadBookById(id) {\r\n  return (dispatch, getState) => {\r\n    const { items } = getState().books;\r\n    let book = items.find(item => item.id === parseInt(id));\r\n    if(!book) {\r\n      loadBooksList()(dispatch).then(() => {\r\n        const { items } = getState().books;\r\n        book = items.find(item => item.id === parseInt(id));\r\n        dispatch({\r\n          type: TYPES.SET_CURRENT_OPENED_BOOK,\r\n          payload: book\r\n        });\r\n      });\r\n    } else {\r\n      dispatch({\r\n        type: TYPES.SET_CURRENT_OPENED_BOOK,\r\n        payload: book\r\n      });\r\n    }\r\n  }\r\n}\r\n","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport { bindActionCreators } from 'redux';\r\n\r\nimport { handleFavoritesList } from '../../actions/booksActions';\r\n\r\nimport {\r\n  Star,\r\n  StarBorder\r\n} from '@material-ui/icons';\r\n\r\nimport {\r\n  Card,\r\n  IconButton,\r\n  Typography\r\n} from '@material-ui/core';\r\n\r\nimport './Book.css';\r\n\r\nconst Book = (props) => (\r\n  <Card className=\"book\" title={props.book.title}>\r\n      <Typography className=\"title\" variant=\"h5\">\r\n        <Link to={`/book-page/${props.book.id}`} className=\"link\">\r\n          {props.book.title}\r\n        </Link>\r\n      </Typography>\r\n    <div className=\"authors\">{\r\n      props.book.authors.map((author, index) => (\r\n        <div key={author}>\r\n          <Link className=\"link\" to={`/author-page/${author}`}>{author}</Link>\r\n          {index !== props.book.authors.length - 1 && ', '}\r\n        </div>\r\n      ))\r\n    }</div>\r\n    <IconButton\r\n      className=\"button\"\r\n      aria-label=\"Add to favorites\"\r\n      onClick={() => props.handleFavoritesList(props.book.id)}\r\n    >\r\n      {props.inFavorites ? <Star className=\"star\"/> : <StarBorder className=\"star -empty\"/>}\r\n    </IconButton>\r\n  </Card>\r\n);\r\n\r\nfunction mapActionsToProps(dispatch) {\r\n  return bindActionCreators({\r\n    handleFavoritesList: (...args) => handleFavoritesList(...args)\r\n  }, dispatch);\r\n}\r\n\r\nexport default connect(\r\n  null,\r\n  mapActionsToProps\r\n)(Book);\r\n","import React from \"react\";\r\nimport {connect} from \"react-redux\";\r\nimport {bindActionCreators} from \"redux\";\r\nimport PropTypes from \"prop-types\";\r\nimport Loader from \"../../components/Loader/Loader\";\r\nimport Book from \"../../components/Book/Book\";\r\n\r\nimport {Paper} from \"@material-ui/core\";\r\n\r\nimport \"./BooksList.css\";\r\n\r\nimport {loadBooksList} from \"../../actions/booksActions\";\r\n\r\nexport class BooksList extends React.PureComponent {\r\n  componentDidMount() {\r\n    this.props.loadBooksList();\r\n  }\r\n\r\n  render() {\r\n    const {books, loading, favorites, match} = this.props;\r\n    const {type = null, genre = null} = match.params;\r\n    return (\r\n      loading ?\r\n        <Loader/> :\r\n        <Paper className=\"books-list\">\r\n          {\r\n            books.map((book) => {\r\n              return (\r\n                !type ||\r\n                (type === \"genres\" && book.genre === genre)) ||\r\n              (type === \"favorites\" && favorites.includes(book.id)) ?\r\n                <Book key={book.id} inFavorites={favorites.includes(book.id)} book={book}/> : \"\"\r\n            })\r\n          }\r\n        </Paper>\r\n    );\r\n  }\r\n}\r\n\r\nBooksList.propTypes = {\r\n  loadBooksList: PropTypes.func,\r\n  match: PropTypes.object,\r\n  books: PropTypes.array,\r\n  favorites: PropTypes.array,\r\n  loading: PropTypes.bool,\r\n};\r\n\r\nfunction mapStateToProps(state) {\r\n  return {\r\n    books: state.books.items,\r\n    favorites: state.books.favorites,\r\n    loading: state.books.loading,\r\n  }\r\n}\r\n\r\nfunction mapActionsToProps(dispatch) {\r\n  return bindActionCreators({\r\n    loadBooksList: (...args) => loadBooksList(...args),\r\n  }, dispatch);\r\n}\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapActionsToProps,\r\n)(BooksList);\r\n","import { TYPES } from '../constants/actionTypes';\r\nimport { ROOT } from '../constants/common';\r\n\r\nimport { loadBooksList } from './booksActions';\r\n\r\nexport function loadAuthorsList() {\r\n  return (dispatch, getState) => {\r\n    dispatch({\r\n      type: TYPES.FETCH_AUTHOR_LIST_START\r\n    });\r\n    const { items } = getState().books;\r\n    if(!items.length) {\r\n      return loadBooksList()(dispatch).then((response) => {\r\n        return fetchAuthorList(response)(dispatch);\r\n      });\r\n    } else {\r\n      return fetchAuthorList(items)(dispatch);\r\n    }\r\n  }\r\n}\r\n\r\nfunction fetchAuthorList(books) {\r\n  return (dispatch) => {\r\n    return fetch(`${ROOT}/api/authors-list`)\r\n      .then(response => response.json())\r\n      .then(response => {\r\n        if(response.success) {\r\n          let authors = response.data.reduce((acc, author) => {\r\n            acc[author.name] = author;\r\n            acc[author.name].books = [];\r\n            return acc;\r\n          }, {});\r\n          books.forEach(book => {\r\n            book.authors.forEach((author) => {\r\n              authors[author].books.push({\r\n                id: book.id,\r\n                title: book.title\r\n              });\r\n            });\r\n          });\r\n          // authors = Object.keys(authors).reduce((acc, author) => {\r\n          //   acc.push(authors[author]);\r\n          //   return acc;\r\n          // }, []);\r\n          dispatch({\r\n            type: TYPES.FETCH_AUTHOR_LIST_SUCCESS,\r\n            payload: authors\r\n          });\r\n          return authors;\r\n        } else {\r\n          throw response.error\r\n        }\r\n      }).catch(error => {\r\n        console.warn(error);\r\n        dispatch({\r\n          type: TYPES.FETCH_AUTHOR_LIST_ERROR\r\n        });\r\n      });\r\n  }\r\n}\r\n\r\nexport function loadAuthorByName(name) {\r\n  return (dispatch, getState) => {\r\n    const { items } = getState().authors;\r\n    let author = items[name];\r\n    if(!author) {\r\n      loadAuthorsList()(dispatch, getState).then((response) => {\r\n        author = response[name];\r\n        dispatch({\r\n          type: TYPES.SET_CURRENT_OPENED_AUTHOR,\r\n          payload: author\r\n        });\r\n      });\r\n    } else {\r\n      dispatch({\r\n        type: TYPES.SET_CURRENT_OPENED_AUTHOR,\r\n        payload: author\r\n      });\r\n    }\r\n  }\r\n}\r\n\r\nexport function expandAuthorMenu(e, name) {\r\n  return {\r\n    type: TYPES.EXPAND_AUTHOR_MENU,\r\n    payload: {\r\n      name,\r\n      target: e.currentTarget\r\n    }\r\n  }\r\n}\r\n\r\nexport function closeAuthorMenu(name) {\r\n  return {\r\n    type: TYPES.CLOSE_AUTHOR_MENU,\r\n    payload: name\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport {connect} from \"react-redux\";\r\nimport {bindActionCreators} from \"redux\";\r\nimport PropTypes from \"prop-types\";\r\nimport {Link} from \"react-router-dom\";\r\nimport Loader from \"../../components/Loader/Loader\";\r\n\r\n\r\nimport {\r\n  Menu,\r\n  MenuItem,\r\n  Paper,\r\n  Button,\r\n} from \"@material-ui/core\";\r\n\r\nimport \"./AuthorsList.css\";\r\n\r\nimport {\r\n  loadAuthorsList,\r\n  expandAuthorMenu,\r\n  closeAuthorMenu,\r\n} from \"../../actions/authorsActions\";\r\n\r\nexport class AuthorsList extends React.PureComponent {\r\n  componentDidMount() {\r\n    this.props.loadAuthorsList();\r\n  }\r\n\r\n  render() {\r\n    const {authors} = this.props;\r\n    console.log(authors);\r\n    return (\r\n      this.props.loading ?\r\n        <Loader /> :\r\n        <Paper className=\"authors-list\">\r\n          {\r\n            Object.keys(authors).map((name) => (\r\n              <div key={name} className=\"author\">\r\n                <Button\r\n                  className=\"button\"\r\n                  variant=\"contained\"\r\n                  onClick={(e) => this.props.expandAuthorMenu(e, name)}\r\n                >\r\n                  {name}\r\n                </Button>\r\n                <Menu\r\n                  anchorEl={authors[name].opened}\r\n                  keepMounted\r\n                  open={Boolean(authors[name].opened)}\r\n                  onClose={() => this.props.closeAuthorMenu(name)}\r\n                  className=\"authors-list-menu\"\r\n                >\r\n                  <MenuItem disableGutters onClose={() => this.props.closeAuthorMenu(name)}>\r\n                    <Link className=\"authors-list-menu-link\" to={`/author-page/${name}`}>\r\n                      {name} page\r\n                    </Link>\r\n                  </MenuItem>\r\n                  {authors[name].books && authors[name].books.map((book) => (\r\n                    <MenuItem disableGutters key={book.id} onClose={() => this.props.closeAuthorMenu(name)}>\r\n                      <Link className=\"authors-list-menu-link\" to={`/book-page/${book.id}`}>\r\n                        {book.title}\r\n                      </Link>\r\n                    </MenuItem>\r\n                  ))}\r\n                </Menu>\r\n              </div>\r\n            ))\r\n          }\r\n        </Paper>\r\n    );\r\n  }\r\n}\r\n\r\nAuthorsList.propTypes = {\r\n  loadAuthorsList: PropTypes.func,\r\n  expandAuthorMenu: PropTypes.func,\r\n  closeAuthorMenu: PropTypes.func,\r\n  authors: PropTypes.object,\r\n  loading: PropTypes.bool,\r\n};\r\n\r\nfunction mapStateToProps(state) {\r\n  return {\r\n    authors: state.authors.items,\r\n    loading: state.authors.loading,\r\n  }\r\n}\r\n\r\nfunction mapActionsToProps(dispatch) {\r\n  return bindActionCreators({\r\n    loadAuthorsList: () => loadAuthorsList(),\r\n    expandAuthorMenu: (...args) => expandAuthorMenu(...args),\r\n    closeAuthorMenu: (...args) => closeAuthorMenu(...args),\r\n  }, dispatch);\r\n}\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapActionsToProps,\r\n)(AuthorsList);\r\n","import React from \"react\";\r\nimport {connect} from \"react-redux\";\r\nimport {bindActionCreators} from \"redux\";\r\nimport PropTypes from \"prop-types\";\r\nimport {Link} from \"react-router-dom\";\r\nimport Loader from \"../../components/Loader/Loader\";\r\n\r\nimport \"./BookPage.css\";\r\n\r\nimport {\r\n  Star,\r\n  StarBorder,\r\n} from \"@material-ui/icons\";\r\n\r\nimport {\r\n  Typography,\r\n  Paper,\r\n  IconButton,\r\n  Button,\r\n} from \"@material-ui/core\";\r\n\r\nimport {\r\n  loadBookById,\r\n  handleFavoritesList,\r\n} from \"../../actions/booksActions\";\r\n\r\n\r\nexport class BookPage extends React.PureComponent {\r\n  componentDidMount() {\r\n    const {id} = this.props.match.params;\r\n    this.props.loadBookById(id);\r\n  }\r\n\r\n  render() {\r\n    const {id, title, authors, description, genre} = this.props.current;\r\n    return (\r\n      this.props.loading ?\r\n        <Loader/> :\r\n        <Paper className=\"book-page\">\r\n          <Typography className=\"title\" variant=\"h4\" title={title}>{title}</Typography>\r\n          <div className=\"authors\">{\r\n            authors && authors.map((author, index) => (\r\n              <Typography variant=\"h6\" key={author}>\r\n                <Link className=\"author\" to={`/author-page/${author}`}>{author}</Link>\r\n                {index !== authors.length - 1 && \", \"}\r\n              </Typography>\r\n            ))\r\n          }</div>\r\n          <Link to={`/books-list/genres/${genre}`} className=\"genre-link\">\r\n            <Button\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n            >\r\n              Search by this genre ({genre})\r\n            </Button>\r\n          </Link>\r\n          <IconButton\r\n            aria-label=\"Add to favorites\"\r\n            onClick={() => this.props.handleFavoritesList(id)}\r\n          >\r\n            {this.props.favorites.includes(id) ? <Star className=\"star\"/> : <StarBorder className=\"star -empty\"/>}\r\n          </IconButton>\r\n          <p className=\"description\">{description}</p>\r\n        </Paper>\r\n    );\r\n  }\r\n}\r\n\r\nBookPage.propTypes = {\r\n  loadBookById: PropTypes.func,\r\n  handleFavoritesList: PropTypes.func,\r\n  match: PropTypes.object,\r\n  current: PropTypes.object,\r\n  favorites: PropTypes.array,\r\n  loading: PropTypes.bool,\r\n};\r\n\r\nfunction mapStateToProps(state) {\r\n  return {\r\n    current: state.books.current,\r\n    favorites: state.books.favorites,\r\n    loading: state.books.loading,\r\n  }\r\n}\r\n\r\nfunction mapActionsToProps(dispatch) {\r\n  return bindActionCreators({\r\n    loadBookById: (...args) => loadBookById(...args),\r\n    handleFavoritesList: (...args) => handleFavoritesList(...args),\r\n  }, dispatch);\r\n}\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapActionsToProps,\r\n)(BookPage);\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { bindActionCreators } from 'redux';\r\nimport PropTypes from 'prop-types';\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport {\r\n  Paper,\r\n  Typography\r\n} from '@material-ui/core';\r\n\r\nimport './AuthorPage.css';\r\n\r\nimport { loadAuthorByName } from '../../actions/authorsActions';\r\n\r\nexport class AuthorPage extends React.PureComponent {\r\n  componentDidMount() {\r\n    const { name } = this.props.match.params;\r\n    this.props.loadAuthorByName(name);\r\n  }\r\n\r\n  render() {\r\n    const { author } = this.props;\r\n    return (\r\n      <Paper className=\"author-page\">\r\n        <Typography className=\"title\" variant=\"h4\" title={author.name}>{author.name}</Typography>\r\n        <p className=\"bio\">{author.bio}</p>\r\n        <div className=\"books\">\r\n          <Typography variant=\"h6\">Author books: </Typography>\r\n          {author.books && author.books.map((book) => (\r\n            <Link key={book.id} className=\"link\" to={`/book-page/${book.id}`}>{book.title}</Link>\r\n          ))}\r\n        </div>\r\n      </Paper>\r\n    );\r\n  }\r\n}\r\n\r\nAuthorPage.propTypes = {\r\n  loadAuthorByName: PropTypes.func,\r\n  author: PropTypes.object,\r\n  match: PropTypes.object,\r\n};\r\n\r\nfunction mapStateToProps(state) {\r\n  return {\r\n    author: state.authors.current\r\n  }\r\n}\r\n\r\nfunction mapActionsToProps(dispatch) {\r\n  return bindActionCreators({\r\n    loadAuthorByName: (...args) => loadAuthorByName(...args)\r\n  }, dispatch);\r\n}\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapActionsToProps\r\n)(AuthorPage);\r\n","import React from 'react';\r\nimport {Link} from 'react-router-dom';\r\n\r\nimport './NotFoundPage.css';\r\n\r\nimport {\r\n  Home,\r\n} from '@material-ui/icons';\r\n\r\nimport {\r\n  Paper,\r\n  Button,\r\n  Typography\r\n} from '@material-ui/core';\r\n\r\nconst NotFoundPage = () => (\r\n  <Paper className=\"page-404\">\r\n    <Typography className=\"title\" variant=\"h4\">Page not found</Typography>\r\n    <Link className=\"link\" to=\"/\">\r\n      <Button\r\n        className=\"button\"\r\n        variant=\"contained\"\r\n        color=\"secondary\"\r\n      >\r\n        <Home className=\"icon\"/>\r\n        Return to home page\r\n      </Button>\r\n    </Link>\r\n  </Paper>\r\n);\r\n\r\nexport default NotFoundPage;\r\n","import React from 'react';\nimport { NavLink } from 'react-router-dom';\n\n\nimport './Header.css';\n\nconst Header = () => (\n  <header className=\"header\">\n    <NavLink\n      className='item'\n      activeClassName='-active'\n      to='/books-list'\n      isActive={(match, location) => location.pathname === '/' || location.pathname === '/books-list'}\n    >\n      <p className='text'>Books list</p>\n    </NavLink>\n    <NavLink className='item' exact={true} activeClassName='-active' to='/authors-list'>\n      <p className='text'>Authors list</p>\n    </NavLink>\n    <NavLink className='item' exact={true} activeClassName='-active' to='/books-list/favorites'>\n      <p className='text'>Favorites list</p>\n    </NavLink>\n  </header>\n);\n\nexport default Header;\n","import React from 'react';\nimport {BrowserRouter, Route, Switch} from 'react-router-dom';\n\nimport BooksList from \"../BooksList/BooksList\";\nimport AuthorsList from \"../AuthorsList/AuthorsList\";\nimport BookPage from \"../BookPage/BookPage\";\nimport AuthorPage from \"../AuthorPage/AuthorPage\";\nimport NotFoundPage from \"../NotFoundPage/NotFoundPage\";\nimport Header from \"../../components/Header/Header\";\n\nimport './App.css';\n\nconst App = () => {\n  return (\n    <BrowserRouter>\n      <div className='site-wrapper'>\n        <Header/>\n        <div className='switch-wrapper'>\n          <Switch>\n            <Route exact path=\"/\" component={BooksList}/>\n            <Route path='/books-list/:type?/:genre?' component={BooksList}/>\n            <Route path='/authors-list' component={AuthorsList}/>\n            <Route path='/book-page/:id' component={BookPage}/>\n            <Route path='/author-page/:name' component={AuthorPage}/>\n            <Route component={NotFoundPage}/>\n          </Switch>\n        </div>\n      </div>\n    </BrowserRouter>\n  );\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import { TYPES } from '../constants/actionTypes';\r\n\r\nconst initialState = {\r\n  loading: false,\r\n  current: {},\r\n  favorites: [],\r\n  items: []\r\n};\r\n\r\nexport default (state = initialState, action) => {\r\n  switch (action.type){\r\n    case TYPES.FETCH_BOOKS_LIST_START:\r\n      return {\r\n        ...state,\r\n        loading: true\r\n      };\r\n    case TYPES.FETCH_BOOKS_LIST_SUCCESS:\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        items: action.payload.items,\r\n        favorites: action.payload.favorites,\r\n      };\r\n    case TYPES.FETCH_BOOKS_LIST_ERROR:\r\n      return {\r\n        ...state,\r\n        loading: false\r\n      };\r\n    case TYPES.SET_FAVORITES_LIST:\r\n      return {\r\n        ...state,\r\n        favorites: action.payload\r\n      };\r\n    case TYPES.SET_CURRENT_OPENED_BOOK:\r\n      return {\r\n        ...state,\r\n        current: action.payload\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import { TYPES } from '../constants/actionTypes';\r\n\r\nconst initialState = {\r\n  loading: false,\r\n  current: {},\r\n  items: {}\r\n};\r\n\r\nexport default (state = initialState, action) => {\r\n  switch (action.type){\r\n    case TYPES.FETCH_AUTHOR_LIST_START:\r\n      return {\r\n        ...state,\r\n        loading: true\r\n      };\r\n    case TYPES.FETCH_AUTHOR_LIST_SUCCESS:\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        items: action.payload\r\n      };\r\n    case TYPES.FETCH_AUTHOR_LIST_ERROR:\r\n      return {\r\n        ...state,\r\n        loading: false\r\n      };\r\n    case TYPES.SET_CURRENT_OPENED_AUTHOR:\r\n      return {\r\n        ...state,\r\n        current: action.payload\r\n      };\r\n    case TYPES.EXPAND_AUTHOR_MENU:\r\n      return {\r\n        ...state,\r\n        items: {\r\n          ...state.items,\r\n          [action.payload.name]: {...state.items[action.payload.name], opened: action.payload.target}\r\n        }\r\n      };\r\n    case TYPES.CLOSE_AUTHOR_MENU:\r\n      return {\r\n        ...state,\r\n        items: {\r\n          ...state.items,\r\n          [action.payload]: {...state.items[action.payload], opened: null}\r\n        }\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import { combineReducers } from 'redux';\r\nimport books from './booksReducer';\r\nimport authors from './authorsReducer';\r\n\r\nexport default combineReducers({\r\n  books,\r\n  authors\r\n});\r\n","import React from 'react';\nimport { render } from 'react-dom';\nimport './index.css';\nimport App from './containers/App/App';\nimport * as serviceWorker from './serviceWorker';\nimport configureStore from './store/configureStore';\nimport { Provider } from 'react-redux';\n\nconst store = configureStore();\n\nrender(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","import { applyMiddleware, createStore } from 'redux';\r\nimport thunk from 'redux-thunk';\r\nimport rootReducer from '../reducers/index';\r\n\r\nexport default function configureStore(initialState) {\r\n  return createStore(rootReducer, initialState, applyMiddleware(thunk));\r\n}"],"sourceRoot":""}